package com.capgemini.bankapp.service.impl;

import java.sql.SQLException;
import java.util.List;

import com.capgemini.bankapp.dao.BankAccountDao;
import com.capgemini.bankapp.dao.impl.BankAccountDaoImpl;
import com.capgemini.bankapp.exception.LowBalanceException;
import com.capgemini.bankapp.model.BankAccount;
import com.capgemini.bankapp.service.BankAccountService;

public class BankAccountServiceImpl implements BankAccountService {
private BankAccountDao bankAccountDao;
	
	public BankAccountServiceImpl() {
		bankAccountDao = new BankAccountDaoImpl();
	}
	@Override
	public double checkBalance(long accountid) {
		
		return bankAccountDao.getBalance(accountid);
	}

	@Override
	public double withdraw(long accountid, double amount) throws LowBalanceException {
		// TODO Auto-generated method stub
		double balance=bankAccountDao.getBalance(accountid);
		if(balance-amount >= 0) {
			balance=balance-amount;
			bankAccountDao.updateBalance(accountid, balance);
			return balance;
		}
		else
		throw new LowBalanceException("You don't have sufficient funds");
	}

	@Override
	public double deposit(long accountid, double amount) {
		double balance=bankAccountDao.getBalance(accountid);
		balance=balance+amount;
		bankAccountDao.updateBalance(accountid, balance);
		return balance;
	}

	@Override
	public boolean deleteBankAccount(long accountid) {
		// TODO Auto-generated method stub
		return bankAccountDao.deleteBankAccount(accountid);
		
	}
	@Override
	public double fundTransfer(long fromAccount, long toAccount, double amount) throws LowBalanceException {
		// TODO Auto-generated method stub
		double newBalance=withdraw(fromAccount, amount);
		deposit(toAccount, amount);
		
		
		return newBalance;
	}
	@Override
	public boolean addNewBankAccount(BankAccount account)  {
		// TODO Auto-generated method stub
		return bankAccountDao.addNewBankAccount(account);	
	}
	@Override
	public List<BankAccount> findAllBankAccounts() {
		// TODO Auto-generated method stub
		return bankAccountDao.findAllBankAccounts();
		
	}
	@Override
	public List<BankAccount> serachBankAccount(long accountid) {
		// TODO Auto-generated method stub
		return bankAccountDao.serachBankAccount(accountid);
	}
	@Override
	public boolean updateBankDetails(long accountid, String accountHolderName, String accountType) {

         
		return bankAccountDao.updateBankDetails(accountid, accountHolderName, accountType);
	 
	}
	
	

}
